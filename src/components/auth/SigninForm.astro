---
// src/components/auth/SigninForm.astro
import Button from '@components/ui/Button.astro';
import Alert from '@components/ui/Alert.astro';

interface Props {
  error?: string; // Error message to display
  // Add other props if needed, e.g., for initial email value if redirecting back with error
  // initialEmail?: string; 
}

const { error } = Astro.props;
---

<form 
  method="POST" 
  action="/api/auth/callback/credentials?redirect=true&callbackUrl=/app/dashboard"
  class="space-y-6"
>
  {/* CSRF Token Handling for Auth.js v5:
    Auth.js (and by extension, integrations like a potential future `auth-astro` for v5) 
    typically handles CSRF protection for its own POST API routes (like /api/auth/callback/*)
    internally. This is often done by checking the Origin header or using a 
    double-submit cookie pattern that the library manages.
    Therefore, manually adding a CSRF token input field is usually not required for these
    core Auth.js routes and can sometimes interfere if not done according to the library's specific mechanism.
    Always refer to the specific Auth.js adapter/integration documentation if in doubt.
    For now, we assume it's handled automatically by Auth.js.
  */}
  
  {error && (
    <Alert type="error" dismissible={true} class="mb-4">
      {error}
    </Alert>
  )}
  
  <div>
    <label for="email-signin-component" class="block text-sm font-medium text-gray-700 mb-1.5">
      Email Address
    </label>
    <input
      id="email-signin-component" name="email"
      type="email"
      autocomplete="email"
      required
      placeholder="you@example.com"
      class="mt-1 block w-full px-4 py-2.5 border border-gray-300 rounded-lg shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 sm:text-sm transition-colors"
      aria-describedby="email-error"
    />
    </div>
  
  <div>
    <label for="password-signin-component" class="block text-sm font-medium text-gray-700 mb-1.5">
      Password
    </label>
    <input
      id="password-signin-component"
      name="password"
      type="password"
      autocomplete="current-password"
      required
      placeholder="••••••••"
      class="mt-1 block w-full px-4 py-2.5 border border-gray-300 rounded-lg shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 sm:text-sm transition-colors"
      aria-describedby="password-error"
    />
  </div>
  
  <div class="flex items-center justify-between text-sm pt-1">
    <div class="flex items-center">
      {/* "Remember me" functionality depends on session strategy and duration.
          Auth.js sessions are typically controlled by maxAge. This checkbox is more of a UI hint.
      */}
      </div>
    
    <div>
      {/* Placeholder for Forgot Password link - implement if needed */}
      {/* <a href="/auth/forgot-password" class="font-medium text-primary-600 hover:text-primary-500 hover:underline">
        Forgot your password?
      </a> 
      */}
    </div>
  </div>
  
  <div class="pt-2">
    <Button type="submit" variant="primary" fullWidth={true} size="lg">
      Sign In
    </Button>
  </div>
</form>
