---
// src/components/ui/Alert.astro
interface Props {
  type?: 'info' | 'success' | 'warning' | 'error';
  dismissible?: boolean;
  class?: string; // Allow a custom class to be passed
}

const { 
  type = 'info',
  dismissible = false,
  class: customClassFromProps // Store the passed class prop
} = Astro.props;

// Color classes based on alert type
const colorClasses = {
  info: 'bg-blue-50 text-blue-800 border-blue-200',
  success: 'bg-green-50 text-green-800 border-green-200',
  warning: 'bg-yellow-50 text-yellow-800 border-yellow-200',
  error: 'bg-red-50 text-red-800 border-red-200'
};
---
<div 
  class:list={[
    "p-4 mb-4 border rounded-md", // Default classes for the alert
    colorClasses[type],           // Type-specific color classes
    customClassFromProps          // Additional classes passed via props
  ]}
  x-data="{ show: true }"
  x-show="show"
  x-transition:leave="transition ease-in duration-200"
  x-transition:leave-start="opacity-100"
  x-transition:leave-end="opacity-0"
  role="alert"
>
  <div class="flex items-start">
    <div class="flex-1">
      <slot />
    </div>
    {dismissible && (
      <button 
        type="button"
        class="ml-auto -mx-1.5 -my-1.5 rounded-lg p-1.5 inline-flex items-center justify-center h-8 w-8 hover:bg-opacity-25 hover:bg-gray-500"
        aria-label="Close"
        @click="show = false"
      >
        <span class="sr-only">Close</span>
        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
          <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
        </svg>
      </button>
    )}
  </div>
</div>