---
// src/components/entities/EntityForm.astro
import Button from "@components/ui/Button.astro";
import Alert from "@components/ui/Alert.astro";
import type { DbEntity } from "@db/schema";

// Extended interface to include the missing properties
interface EntityFormData extends Partial<DbEntity> {
  parent_entity_id?: string | null;
  is_active?: number | boolean;
  allows_sub_entities?: number | boolean; 
}

interface Props {
  /** Entity data to pre-fill the form. For new entities, pass default/empty values. */
  entity?: EntityFormData;
  /** List of all user's entities to select a parent from. Should be pre-filtered if needed. */
  availableParentEntities?: DbEntity[];
  /** True if editing an existing entity, false if creating a new one. */
  isEditing?: boolean;
  /** Error message to display. */
  errorMessage?: string | null;
  /** The URL the form should submit to. */
  formAction: string;
  /** Text for the submit button. */
  submitButtonText?: string;
  /** URL for the cancel button. */
  cancelUrl: string;
}

const {
  entity,
  availableParentEntities = [],
  isEditing = false,
  errorMessage = null,
  formAction,
  submitButtonText = isEditing ? "Save Changes" : "Create Entity",
  cancelUrl,
} = Astro.props;

// Ensure default values for a new entity if `entity` prop is minimal
const currentEntity: EntityFormData = {
  id: entity?.id || undefined, // UUID, only present if editing
  legal_name: entity?.legal_name || "",
  ein: entity?.ein || null,
  address: entity?.address || null,
  business_type: entity?.business_type || "llc",
  parent_entity_id: entity?.parent_entity_id || null,
  // Fix TypeScript type comparison issues
  is_active: entity?.is_active ? 1 : 0, // Type-safe conversion
  // Also fix this boolean/number comparison
  allows_sub_entities: entity?.allows_sub_entities === 0 ? 0 : 1, // Default to allows sub-entities (1) if undefined
  created_at: entity?.created_at || undefined,
  updated_at: entity?.updated_at || undefined,
};

// Business type options
const businessTypes = [
  { value: "llc", label: "Limited Liability Company (LLC)" },
  { value: "corporation", label: "Corporation" },
  { value: "sole_proprietorship", label: "Sole Proprietorship" },
  { value: "partnership", label: "Partnership" },
  { value: "trust", label: "Trust" },
  { value: "other", label: "Other" },
];

// Filter available parent entities to exclude the current entity if editing
const parentEntityOptions = isEditing && currentEntity.id
  ? availableParentEntities.filter(ent => ent.id !== currentEntity.id)
  : availableParentEntities;

// Unique suffix for element IDs
const idSuffix = currentEntity.id || 'new';
---

<form 
  method="POST" 
  action={formAction}
  class="space-y-6 bg-white p-6 sm:p-8 rounded-xl shadow-lg border border-gray-200"
  id={isEditing ? `edit-entity-form-${idSuffix}` : "new-entity-form"}
>
  {errorMessage && <Alert type="error" class="mb-6">{decodeURIComponent(errorMessage)}</Alert>}

  {isEditing && <input type="hidden" name="_method" value="PUT" />}

  <div>
    <label for={`legal_name-${idSuffix}`} class="block text-sm font-medium text-gray-700 mb-1">
      Legal Name <span class="text-red-500">*</span>
    </label>
    <input
      id={`legal_name-${idSuffix}`}
      name="legal_name"
      type="text"
      required
      value={currentEntity.legal_name}
      class="w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors"
      placeholder="e.g., Oakwood Properties LLC"
    />
    <p class="mt-1 text-xs text-gray-500">
      The official registered name of this entity.
    </p>
  </div>

  <div>
    <label for={`business_type-${idSuffix}`} class="block text-sm font-medium text-gray-700 mb-1">
      Business Type <span class="text-red-500">*</span>
    </label>
    <select
      id={`business_type-${idSuffix}`}
      name="business_type"
      required
      class="w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors bg-white"
    >
      {businessTypes.map(type => (
        <option value={type.value} selected={currentEntity.business_type === type.value}>
          {type.label}
        </option>
      ))}
    </select>
  </div>

  <div>
    <label for={`ein-${idSuffix}`} class="block text-sm font-medium text-gray-700 mb-1">
      EIN (Optional)
    </label>
    <input
      id={`ein-${idSuffix}`}
      name="ein"
      type="text"
      value={currentEntity.ein || ""}
      class="w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors"
      placeholder="XX-XXXXXXX"
    />
    <p class="mt-1 text-xs text-gray-500">
      Employer Identification Number for this entity.
    </p>
  </div>

  <div>
    <label for={`address-${idSuffix}`} class="block text-sm font-medium text-gray-700 mb-1">
      Address (Optional)
    </label>
    <textarea
      id={`address-${idSuffix}`}
      name="address"
      rows="3"
      class="w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors"
      placeholder="Street address, city, state, zip"
    >{currentEntity.address || ""}</textarea>
  </div>

  <div>
    <label for={`parent_entity_id-${idSuffix}`} class="block text-sm font-medium text-gray-700 mb-1">
      Parent Entity (Optional)
    </label>
    <select
      id={`parent_entity_id-${idSuffix}`}
      name="parent_entity_id"
      class="w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors bg-white"
    >
      <option value="">None (This is a top-level entity)</option>
      {parentEntityOptions.map(parentEnt => (
        <option value={parentEnt.id} selected={currentEntity.parent_entity_id === parentEnt.id}>
          {parentEnt.legal_name} ({parentEnt.business_type})
        </option>
      ))}
    </select>
    <p class="mt-1 text-xs text-gray-500">
      Select if this entity is owned by another entity in your account.
    </p>
  </div>

  <div class="flex items-center">
    <input
      id={`allows_sub_entities-${idSuffix}`}
      name="allows_sub_entities"
      type="checkbox"
      value="true"
      checked={currentEntity.allows_sub_entities === 1}
      class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded shadow-sm"
    />
    <label for={`allows_sub_entities-${idSuffix}`} class="ml-2 block text-sm text-gray-700">
      Allows Sub-Entities
    </label>
    <p class="ml-2 text-xs text-gray-500">(Enable if this entity can own other entities)</p>
  </div>

  <div class="flex items-center">
    <input
      id={`is_active-${idSuffix}`}
      name="is_active"
      type="checkbox"
      value="true"
      checked={currentEntity.is_active === 1}
      class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded shadow-sm"
    />
    <label for={`is_active-${idSuffix}`} class="ml-2 block text-sm text-gray-700">
      Active Entity
    </label>
    <p class="ml-2 text-xs text-gray-500">(Inactive entities aren't shown in normal operations)</p>
  </div>

  <div class="flex justify-end space-x-4 pt-6 border-t border-gray-200 mt-8">
    <Button 
      variant="outline" 
      href={cancelUrl}
    >
      Cancel
    </Button>
    <Button type="submit" variant="primary">
      {submitButtonText}
    </Button>
  </div>
</form>