---
// src/pages/auth/signin.astro
import AuthLayout from "@layouts/AuthLayout.astro";
import Button from "@components/ui/Button.astro";
import Alert from "@components/ui/Alert.astro";

// Initialize error and success messages
let errorMessage = "";
let successMessage = "";
const params = new URL(Astro.request.url).searchParams;

// Check for error messages passed in the URL query parameters
if (params.has("error")) {
  const errorCode = params.get("error");
  if (errorCode === "CredentialsSignin") {
    errorMessage = "Incorrect email or password. Please try again.";
  } else if (errorCode === "OAuthAccountNotLinked") {
    errorMessage = "This email is linked via a different provider (e.g., Google). Try signing in with that provider or link your accounts.";
  } else {
    errorMessage = `Sign-in failed. Error: ${errorCode}`;
  }
}

// Check for success messages, like after a successful registration
if (params.has("registered")) {
  successMessage = "Registration successful! Please sign in with your new account.";
} else if (params.has("password_reset")) {
  successMessage = "Password has been reset successfully. Please sign in with your new password.";
}
---

<AuthLayout title="Sign In">
  <div class="w-full max-w-sm mx-auto">
    <form
      method="POST"
      action="/api/auth/callback/credentials?redirect=true&callbackUrl=/app/dashboard"
      class="bg-white shadow-md rounded-lg px-8 pt-6 pb-8 mb-4 space-y-6"
    >
      <div class="text-center">
        <h1 class="text-2xl font-bold text-gray-800">Sign In</h1>
        <p class="text-sm text-gray-600 mt-1">Access your Real Estate Accounting dashboard.</p>
      </div>

      {successMessage && (
        <Alert type="success" dismissible={true}>
          {successMessage}
        </Alert>
      )}

      {errorMessage && (
        <Alert type="error" dismissible={false}>
          {errorMessage}
        </Alert>
      )}

      <div>
        <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email address</label>
        <input 
          id="email"
          name="email" 
          type="email" 
          required 
          placeholder="you@example.com"
          autocomplete="email"
          class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm" 
        />
      </div>

      <div>
        <div class="flex justify-between">
          <label for="password" class="block text-sm font-medium text-gray-700 mb-1">Password</label>
          <a href="/auth/forgot-password" class="text-sm text-primary-600 hover:text-primary-500">
            Forgot password?
          </a>
        </div>
        <div class="relative" x-data="{ showPassword: false }">
          <input 
            id="password"
            name="password" 
            type="password" 
            required 
            placeholder="••••••••"
            autocomplete="current-password"
            x-bind:type="showPassword ? 'text' : 'password'"
            x-ref="pwd"
            class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm" 
          />
          <button 
            type="button"
            class="absolute inset-y-0 right-0 flex items-center pr-3 text-gray-400 hover:text-gray-600"
            x-on:click="showPassword = !showPassword"
            tabindex="-1"
          >
            <svg 
              x-show="!showPassword" 
              xmlns="http://www.w3.org/2000/svg" 
              class="h-5 w-5" 
              fill="none" 
              viewBox="0 0 24 24" 
              stroke="currentColor"
            >
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
            </svg>
            <svg 
              x-show="showPassword" 
              xmlns="http://www.w3.org/2000/svg" 
              class="h-5 w-5" 
              fill="none" 
              viewBox="0 0 24 24" 
              stroke="currentColor"
            >
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21" />
            </svg>
          </button>
        </div>
      </div>
      
      <div class="flex items-center">
        <input 
          id="remember_me" 
          name="remember_me" 
          type="checkbox" 
          class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded" 
        />
        <label for="remember_me" class="ml-2 block text-sm text-gray-700">
          Remember me
        </label>
      </div>

      <div>
        <Button 
          type="submit" 
          variant="primary" 
          size="lg"
          fullWidth={true}
        >
          Sign In
        </Button>
      </div>
    </form>
    <p class="text-center text-sm text-gray-600">
      Don't have an account? 
      <a href="/auth/signup" class="font-medium text-primary-600 hover:text-primary-500">
        Register here
      </a>
    </p>
  </div>
</AuthLayout>

<script>
// Client-side script for password toggle
function togglePasswordVisibility(inputId: string): void {
  const input = document.getElementById(inputId) as HTMLInputElement | null;
  if (input) {
    if (input.type === "password") {
      input.type = "text";
    } else {
      input.type = "password";
    }
  }
}
</script>